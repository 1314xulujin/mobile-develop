移动端开发 : 开发适用于手机, 平板,手持设备的应用产品.

产品分类:

一、H5 Web网页应用
    1)普通的手机浏览器使用h5网页(手机京东,手机淘宝,手机百度...)
    2)微信公众号内页(可以调用微信对应接口功能)

    形态分类:
        1)pc + 移动 =  两套 : (淘宝,京东 ,pc一套 , 移动一套:手机m站 )
            优点: 开发方便, 代码精简 性能高 ,用户体验好
            缺点: 开发,维护成本高
            使用场景:pc 和 移动端性能要求高 ,内容丰富 ,用户体验要求高

        2)pc + 移动 = 一套  :( 响应式网站 ,可以根据屏幕自动适配 )
            优点:开发维护成本相对较低
            缺点: 内容冗余 , 实现适配比较复杂 , 性能比较低
            使用场景: 网站内容较少, 排版布局较为简单 (块状布局)

------------------------------------------------------------------------------------------------------------
二、App应用
    1)纯原生app : 功能全面,用户体验好 ,性能高,离线使用  .  开发成本高,维护(迭代)成本高 ,内容受限
        安卓 : java
        ios: object-c

    2)纯web app :功能受限, 用户体验差,不能离线使用 ,开发成本低,维护成本低,方便内容更新维护 .
        纯网页html + css + js 实现的手机端页面, 通过一些工具打包成对应平台的app 安装包 (.apk  / .ipa)

    3)混合 app(Hybird App) :功能全面 ,用户体验较好,性能高,可以实现离线使用,开发(维护,更新)成本较低
        通过ios,安卓开发基于js调用接口提供使用 ,界面由web开发 , 功能就是由安卓/ios开发

三、小程序 (核心基础 css + js + html)
    微信 , 支付宝 , 百度 ,头条 ,美团...

    所谓的小程序就是能运行在app 上的web应用 ,使用的语法就是由各个app内部封装好的一套框架(界面,功能,交互...)
    其实例如像微信小程序就是一个经腾讯微信团队开发一套可直接运行在微信app上的前端框架 .

--------------------------------------------------------------------------------------------------------------
PC 与 移动端的开发区别:

    1.终端设备 : 手机 \ 平板 \ 各种手持设备

    2.输入特性 :
        pc: 鼠标 , 键盘
        移动: 触摸

    3.屏幕
        dpr(设备的像素比devicePixelRatio)
         pc : 屏幕大  , 显示像素比 1:1  (1个css布局 需要物理上一个像素点单位呈现)
         移动: 屏幕小 , 显示像素比:1:2 , 1:3 (1个css 布局像素 ,需要通过物理上2个单位的像素点呈现) 高清屏 / 超高清屏

         苹果 retina屏  1 : 2  ,为什么会比电脑显示器更加高清,就是因为一个图像的css像素 ,会使用显示上的2个单位的物理像素来呈现

         iphone6 屏幕: 1334 x 750  = > 宽度750个像素点  , 高度 1334个像素点
         那么css布局中 ,宽度最大为多少??  750 / 2 =  375px

         设计稿一般会给一份2倍或者倍的设计稿,通常会采用市面上最普遍的一款机型为参考设计(iphone6) 750 * 1334

    4.浏览器
        各种浏览器

    5.开发调试
        1.使用chrome 浏览器的移动设备调试控制台(模拟器)
        2.安装一些安卓模拟器(模拟一个安卓手机) , (夜神 ,很多模拟器)
        3.真机测试

    6.视口
        添加理想视口: 让布局视口 宽度与视觉视口一致
        <meta name="viewport"
                  content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">

    7.布局方式
        使用的技术一样
------------------------------------------------------------------------------------------------------------
    移动端常用单位 :
        px  绝对值的像素单位
        em  相对于当前对象内文本的字体大小单位
        rem 相对于网页根(html)节点字体大小单位
        vh  相对当前屏幕高度可视区域分成100份的长度单位  => 把屏幕高度分成100份计算
        vw  相当于当前屏幕宽度可视区域分成100份的单位

        移动端布局如果想要更好做适配 , 不建议写固定值(px) 不太好适配

        自适应
        百分比布局
        响应式布局: 可以根据屏幕的类型,大小尺寸等信息可以实现不同的呈现效果
                媒体查询:(Media Query) 查询媒体设备的信息 ,作出不同的样式处理


----------------------------------------------------------------------------------------------------------
    rem 单位 实现一个类似手机淘宝的效果 , 实现页面内容根据屏幕大小等比例缩放


---------------------------------------------------------------------------------------------------------
打包App : 把移动端项目打包成 安卓 / ios 安装包
    1.使用一些开发工具 提供的云端打包 (只要把自己写好的项目代码和配置提交到对应服务器,打包过程完全在服务器端执行,打包后直接下载安装包即可)
        1)Hbuilder
        2)apiCloud
        ...

    2.可以使用开发环境打包(需要本地配置各个平台的开发环境): 1.安卓 - > Android Studio   2. ios(需要在苹果系统中使用Xcode )
         1) Android Studio  -> 安卓开发工程师
         2) Cordova (基于node.js , 本身也是一套框架,内置了很多原生的接口功能提供js方式调用) - > 前端

    如果只是纯粹的html+css+js常规的交互功能只需要跟pc端一样处理就可以,但是如果想要调用到系统级别应用(修改屏幕亮度 , 震动  拍照...)这些功能不是浏览器js所能提供的,
    所以需要通过一些(混合应用)框架,封装原生的功能提供给前端开发者通过js去调用

    Hbuilder , apiCloud , Cordova 等工具打包都可以把封装好的原生功能 打包进去.


---------------------------------------------------------------------------------------------------------
移动端开发常见问题:
-webkit-touch-callout : none  = > 禁用系统长按触摸时触发的菜单,比如长按图片保存 ...

-webkit-overflow-scrolling:touch  增强触摸滑动回弹效果(使滑动效果更接近原生的体验)

1.ios下,固定定位会失效 , 在带输入框环境
固定定位失效问题。
在ios下， 点击输入框，打开输入键盘时，页面使用的固定定位失效。
原则： 能避免使用固定定位布局的就尽量避免，可以使用绝对定位代替 ，不能避免就学淘宝，京东，可以实现输入框的时候跳转一下（跳转至没有使用固定定位的页面）
强行处理固定定位失效，用js根据页面高度，给使用固定定位的元素，设置绝对定位。

2.虚拟键盘问题 :

移动端软键盘监听（弹出，收起），及影响定位布局的问题 ：https://www.cnblogs.com/wangyihong/p/7514304.html

虚拟键盘，移动web开发的痛：https://www.cnblogs.com/jianyeweb/p/5246429.html

js移动端 虚拟键盘提交事件：https://www.cnblogs.com/mapletao/p/6474238.html



3.针对于平台的兼容性，可能有时需要针对某一系统进行单独的处理，就需要识别当前系统
var u = navigator.userAgent, app = navigator.appVersion;
var isiOS = !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios终端

if (isiOS) {
　　window.setTimeout(function(){
    window.scrollTo(0,document.body.clientHeight);
　　}, 500);
}


// 解决输入导致固定定位失效问题 , 可以通过绝对定位获取当前滚动位置的距离,设置相对的绝对定位位置来代替固定定位,让位置保持不变,但是什么时候去设置呢??其实只有虚拟键盘弹出的时候会失效,所以应该在虚拟键盘打开时设置,
检测窗口的高度,有高度发生变化(1334 = > 800) 键盘弹出


//例如场景 ,在键盘上输入内容之后 ,点了提交,做表单验证 ?
//虚拟键盘的按键事件是没有的 , 提交事件也是没有的,但是如果在表单中 ,按了虚拟键盘的提交 ,那么它就会将表单提交.
此时,就可以利用监听表单提交的事件,来做该处理.(借鸡下蛋)

4.点透: 两个非父子关系的层叠在一起 ,上面的层一个添加触摸事件,触摸完之后,立即隐藏,会触发到下一个层的点击事件
原因: 点击事件触发时会比触摸事件慢300ms




手机性能低,内存爆满容易闪退.
1.大量数据尽量不要重复的存储,长时间存储一些不常用的东西
2.尽量使用css3 transform:translate3d (css3 中3d特效属性会开启物理加速)
3.尽量不要使用太耗性能的css样式 : calc() / filter() / position
4.尽量能够减少不必要,或者大量的dom操作


--------------------------------------------------------------------------------------------------------------
